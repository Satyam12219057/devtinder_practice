-create a repository
-Initialize the repository
-node_module,package.json,package_lock.json
-Install express ---> npm i express
-create  a server
-listen to port number
-write a request handler for /test,/hello
-Install nodemon and update script inside package.json
- order of the routes which is matters a lot
-play with the routes propelry
-order of the routes matter a lot
//postman isntallation ans use it propelry
-write a logic to handle the GET,POST,PATCH,DELETE API calls and test them on post man
-explore routings and use ?,+,(),*,*in the routes
-use of the regex /a/
-reading the query params in the routings
-reading the dynamic routes
-create route handlers and play with the code how can i handle multiple routes
-next()
-how properly use the next() function during the routes
-what is the middeleare and how express js handle these middelware
-write the dummy middelware prpprly and handle it
-create a free cluster  on mongodb offecial website (mongodb atlas)
-connect your application to the database and 
-install the mongoose liberary
-take the connection string and connect server to the database properly
-call the connectdb function and connect to database before starting application on 7777
-create a userSchema and user node_module
-add first data to the database
-difference between the json and the javascript object
-json always need a key value pair
-add the express.json middelware to your app
-Make your signup Api dyanmic to recive data from the end user
-User.findOne with duplicate email which one will the db returns
-api get by email
-API- feed-- get/feed whish can give you all the  data of the user
-Api - get user by id try to find the user by the id of the user
-create api which can update the user
-delete,update,patch,get,put also make the all api which is required for any user

